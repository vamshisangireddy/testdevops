- name: Install K8s prerequisites on all nodes
  hosts: k8s_master,k8s_workers
  become: yes
  tasks:
    - name: Enable kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Set up required sysctl params
      sysctl:
        name: "{{ item }}"
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes
      loop:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Add Kubernetes YUM repo
      yum_repository:
        name: kubernetes
        description: Kubernetes
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
        gpgkey: https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        gpgcheck: yes
        enabled: yes

    - name: Install Kubernetes components and containerd
      package:
        name:
          - kubelet
          - kubeadm
          - kubectl
          - containerd
        state: present

    - name: Configure containerd
      shell: |
        containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
        sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart and enable containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Enable and start kubelet
      systemd:
        name: kubelet
        state: started
        enabled: yes

- name: Configure Master Node
  hosts: k8s_master
  become: yes
  tasks:
    - name: Initialize Kubernetes Cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU
      register: kubeadm_init_result

    - name: Create .kube directory for ec2-user
      file:
        path: "/home/ec2-user/.kube"
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy admin.conf to ec2-user's .kube directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ec2-user/.kube/config
        remote_src: yes
        owner: ec2-user
        group: ec2-user

    - name: Install Flannel network CNI
      become: false
      command: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command as a fact
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

- name: Configure Worker Nodes
  hosts: k8s_workers
  become: yes
  tasks:
    - name: Join worker nodes to the Kubernetes cluster
      command: "{{ hostvars[groups['k8s_master'][0]].join_command }}"