#version: '3.8'
# hello-world microservices architecture with Docker Compose
services:
  user-service:
    build: ./user-service
    image: ${DOCKERHUB_USERNAME}/testdevops:user-service-${IMAGE_TAG:-latest}
    restart: unless-stopped
    #env_file:
    #  - ./user-service/.env
    ports:
      - "5001:5000"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build: ./product-service
    image: ${DOCKERHUB_USERNAME}/testdevops:product-service-${IMAGE_TAG:-latest}
    restart: unless-stopped
    #env_file:
    #  - ./product-service/.env
    ports:
      - "5002:5000"
    networks:
      - microservices-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build: ./order-service
    image: ${DOCKERHUB_USERNAME}/testdevops:order-service-${IMAGE_TAG:-latest}
    restart: unless-stopped
    #env_file:
    #  - ./order-service/.env
    ports:
      - "5003:5000"
    networks:
      - microservices-net
    depends_on:
      user-service:
        condition: service_healthy # Waits for user-service to pass its healthcheck
      product-service:
        condition: service_healthy # Waits for product-service to pass its healthcheck

networks:
  microservices-net:
    driver: bridge